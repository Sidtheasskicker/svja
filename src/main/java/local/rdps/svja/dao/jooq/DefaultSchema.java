/*
 * This file is generated by jOOQ.
 */
package local.rdps.svja.dao.jooq;


import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import local.rdps.svja.dao.jooq.tables.Files;
import local.rdps.svja.dao.jooq.tables.GroupPermissions;
import local.rdps.svja.dao.jooq.tables.Groups;
import local.rdps.svja.dao.jooq.tables.ProjectFiles;
import local.rdps.svja.dao.jooq.tables.Projects;
import local.rdps.svja.dao.jooq.tables.SqliteSequence;
import local.rdps.svja.dao.jooq.tables.UserGroups;
import local.rdps.svja.dao.jooq.tables.Users;

import org.jetbrains.annotations.NotNull;
import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DefaultSchema extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>DEFAULT_SCHEMA</code>
     */
    public static final DefaultSchema DEFAULT_SCHEMA = new DefaultSchema();

    /**
     * The table <code>files</code>.
     */
    public final Files FILES = Files.FILES;

    /**
     * The table <code>group_permissions</code>.
     */
    public final GroupPermissions GROUP_PERMISSIONS = GroupPermissions.GROUP_PERMISSIONS;

    /**
     * The table <code>groups</code>.
     */
    public final Groups GROUPS = Groups.GROUPS;

    /**
     * The table <code>project_files</code>.
     */
    public final ProjectFiles PROJECT_FILES = ProjectFiles.PROJECT_FILES;

    /**
     * The table <code>projects</code>.
     */
    public final Projects PROJECTS = Projects.PROJECTS;

    /**
     * The table <code>sqlite_sequence</code>.
     */
    public final SqliteSequence SQLITE_SEQUENCE = SqliteSequence.SQLITE_SEQUENCE;

    /**
     * The table <code>user_groups</code>.
     */
    public final UserGroups USER_GROUPS = UserGroups.USER_GROUPS;

    /**
     * The table <code>users</code>.
     */
    public final Users USERS = Users.USERS;

    /**
     * No further instances allowed
     */
    private DefaultSchema() {
        super("", null);
    }


    @Override
    @NotNull
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    @NotNull
    public final List<Table<?>> getTables() {
        return Arrays.<Table<?>>asList(
            Files.FILES,
            GroupPermissions.GROUP_PERMISSIONS,
            Groups.GROUPS,
            ProjectFiles.PROJECT_FILES,
            Projects.PROJECTS,
            SqliteSequence.SQLITE_SEQUENCE,
            UserGroups.USER_GROUPS,
            Users.USERS);
    }
}
