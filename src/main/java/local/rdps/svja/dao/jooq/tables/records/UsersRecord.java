/*
 * This file is generated by jOOQ.
 */
package local.rdps.svja.dao.jooq.tables.records;


import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import local.rdps.svja.dao.jooq.tables.Users;
import local.rdps.svja.dao.jooq.tables.interfaces.IUsers;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record5<Integer, String, String, Integer, LocalDateTime>, IUsers {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>users.id</code>.
     */
    @Override
    public void setId(@NotNull Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>users.id</code>.
     */
    @NotNull
    @Override
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>users.username</code>.
     */
    @Override
    public void setUsername(@NotNull String value) {
        set(1, value);
    }

    /**
     * Getter for <code>users.username</code>.
     */
    @NotNull
    @Override
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>users.password</code>.
     */
    @Override
    public void setPassword(@Nullable String value) {
        set(2, value);
    }

    /**
     * Getter for <code>users.password</code>.
     */
    @Nullable
    @Override
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>users.login_count</code>.
     */
    @Override
    public void setLoginCount(@NotNull Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>users.login_count</code>.
     */
    @NotNull
    @Override
    public Integer getLoginCount() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>users.last_login_date</code>.
     */
    @Override
    public void setLastLoginDate(@Nullable LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>users.last_login_date</code>.
     */
    @Nullable
    @Override
    public LocalDateTime getLastLoginDate() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row5<Integer, String, String, Integer, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row5<Integer, String, String, Integer, LocalDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Integer> field1() {
        return Users.USERS.ID;
    }

    @Override
    @NotNull
    public Field<String> field2() {
        return Users.USERS.USERNAME;
    }

    @Override
    @NotNull
    public Field<String> field3() {
        return Users.USERS.PASSWORD;
    }

    @Override
    @NotNull
    public Field<Integer> field4() {
        return Users.USERS.LOGIN_COUNT;
    }

    @Override
    @NotNull
    public Field<LocalDateTime> field5() {
        return Users.USERS.LAST_LOGIN_DATE;
    }

    @Override
    @NotNull
    public Integer component1() {
        return getId();
    }

    @Override
    @NotNull
    public String component2() {
        return getUsername();
    }

    @Override
    @Nullable
    public String component3() {
        return getPassword();
    }

    @Override
    @NotNull
    public Integer component4() {
        return getLoginCount();
    }

    @Override
    @Nullable
    public LocalDateTime component5() {
        return getLastLoginDate();
    }

    @Override
    @NotNull
    public Integer value1() {
        return getId();
    }

    @Override
    @NotNull
    public String value2() {
        return getUsername();
    }

    @Override
    @Nullable
    public String value3() {
        return getPassword();
    }

    @Override
    @NotNull
    public Integer value4() {
        return getLoginCount();
    }

    @Override
    @Nullable
    public LocalDateTime value5() {
        return getLastLoginDate();
    }

    @Override
    @NotNull
    public UsersRecord value1(@NotNull Integer value) {
        setId(value);
        return this;
    }

    @Override
    @NotNull
    public UsersRecord value2(@NotNull String value) {
        setUsername(value);
        return this;
    }

    @Override
    @NotNull
    public UsersRecord value3(@Nullable String value) {
        setPassword(value);
        return this;
    }

    @Override
    @NotNull
    public UsersRecord value4(@NotNull Integer value) {
        setLoginCount(value);
        return this;
    }

    @Override
    @NotNull
    public UsersRecord value5(@Nullable LocalDateTime value) {
        setLastLoginDate(value);
        return this;
    }

    @Override
    @NotNull
    public UsersRecord values(@NotNull Integer value1, @NotNull String value2, @Nullable String value3, @NotNull Integer value4, @Nullable LocalDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IUsers from) {
        setId(from.getId());
        setUsername(from.getUsername());
        setPassword(from.getPassword());
        setLoginCount(from.getLoginCount());
        setLastLoginDate(from.getLastLoginDate());
    }

    @Override
    public <E extends IUsers> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(@NotNull Integer id, @NotNull String username, @Nullable String password, @NotNull Integer loginCount, @Nullable LocalDateTime lastLoginDate) {
        super(Users.USERS);

        setId(id);
        setUsername(username);
        setPassword(password);
        setLoginCount(loginCount);
        setLastLoginDate(lastLoginDate);
    }
}
