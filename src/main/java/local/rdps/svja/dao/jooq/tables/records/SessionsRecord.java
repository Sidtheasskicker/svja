/*
 * This file is generated by jOOQ.
 */
package local.rdps.svja.dao.jooq.tables.records;


import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import local.rdps.svja.dao.jooq.tables.Sessions;
import local.rdps.svja.dao.jooq.tables.interfaces.ISessions;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SessionsRecord extends UpdatableRecordImpl<SessionsRecord> implements Record3<Integer, String, LocalDateTime>, ISessions {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>sessions.id</code>.
     */
    @Override
    public void setId(@NotNull Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>sessions.id</code>.
     */
    @NotNull
    @Override
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>sessions.session_data</code>.
     */
    @Override
    public void setSessionData(@Nullable String value) {
        set(1, value);
    }

    /**
     * Getter for <code>sessions.session_data</code>.
     */
    @Nullable
    @Override
    public String getSessionData() {
        return (String) get(1);
    }

    /**
     * Setter for <code>sessions.last_accessed</code>.
     */
    @Override
    public void setLastAccessed(@Nullable LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>sessions.last_accessed</code>.
     */
    @Nullable
    @Override
    public LocalDateTime getLastAccessed() {
        return (LocalDateTime) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row3<Integer, String, LocalDateTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row3<Integer, String, LocalDateTime> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Integer> field1() {
        return Sessions.SESSIONS.ID;
    }

    @Override
    @NotNull
    public Field<String> field2() {
        return Sessions.SESSIONS.SESSION_DATA;
    }

    @Override
    @NotNull
    public Field<LocalDateTime> field3() {
        return Sessions.SESSIONS.LAST_ACCESSED;
    }

    @Override
    @NotNull
    public Integer component1() {
        return getId();
    }

    @Override
    @Nullable
    public String component2() {
        return getSessionData();
    }

    @Override
    @Nullable
    public LocalDateTime component3() {
        return getLastAccessed();
    }

    @Override
    @NotNull
    public Integer value1() {
        return getId();
    }

    @Override
    @Nullable
    public String value2() {
        return getSessionData();
    }

    @Override
    @Nullable
    public LocalDateTime value3() {
        return getLastAccessed();
    }

    @Override
    @NotNull
    public SessionsRecord value1(@NotNull Integer value) {
        setId(value);
        return this;
    }

    @Override
    @NotNull
    public SessionsRecord value2(@Nullable String value) {
        setSessionData(value);
        return this;
    }

    @Override
    @NotNull
    public SessionsRecord value3(@Nullable LocalDateTime value) {
        setLastAccessed(value);
        return this;
    }

    @Override
    @NotNull
    public SessionsRecord values(@NotNull Integer value1, @Nullable String value2, @Nullable LocalDateTime value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ISessions from) {
        setId(from.getId());
        setSessionData(from.getSessionData());
        setLastAccessed(from.getLastAccessed());
    }

    @Override
    public <E extends ISessions> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SessionsRecord
     */
    public SessionsRecord() {
        super(Sessions.SESSIONS);
    }

    /**
     * Create a detached, initialised SessionsRecord
     */
    public SessionsRecord(@NotNull Integer id, @Nullable String sessionData, @Nullable LocalDateTime lastAccessed) {
        super(Sessions.SESSIONS);

        setId(id);
        setSessionData(sessionData);
        setLastAccessed(lastAccessed);
    }
}
